/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.LayoutManager;
import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import net.sourceforge.jdatepicker.impl.UtilDateModel;
import BUS.CouponBUS;
import BUS.KhuyenMaiHoaDonBUS;
import BUS.KhuyenMaiSanPhamBUS;
import CUSTOM.KiemTra;
import DTO.ChucVu;
import DTO.Coupon;
import DTO.KhuyenMaiHoaDon;
import DTO.KhuyenMaiSanPham;
import DTO.NhanVien;
import java.awt.Color;
import java.awt.Graphics;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author ASUS
 */
public class KhuyenMaiJPanel extends javax.swing.JPanel {
    private KiemTra kt=new KiemTra();
    private CouponBUS cpBUS=new CouponBUS();
    private KhuyenMaiSanPhamBUS kmspBUS=new KhuyenMaiSanPhamBUS();
    private KhuyenMaiHoaDonBUS kmhdBUS=new KhuyenMaiHoaDonBUS();
    private NhanVien user;
    private ChucVu cv;
    /**
     * Creates new form KhuyenMaiJPanel
     */
    public KhuyenMaiJPanel() throws ClassNotFoundException, SQLException {
        initComponents();
        SetUp();
    }
    
    public void SetUp() throws ClassNotFoundException, SQLException
    {
        if(cv.getKhuyenMai().contains("them"))
        {
            bthem.setEnabled(true);
            jButton31.setEnabled(true);
            jButton25.setEnabled(true);
        }
        if(cv.getKhuyenMai().contains("sua"))
        {
            bsua.setEnabled(true);
            jButton32.setEnabled(true);
            jButton26.setEnabled(true);
        }
        if(cv.getKhuyenMai().contains("xoa"))
        {
            bxoa.setEnabled(true);
            jButton33.setEnabled(true);
            jButton27.setEnabled(true);
        }
        if(cv.getKhuyenMai().contains("timkiem"))
        {
            jButton1.setEnabled(true);
            jButton17.setEnabled(true);
            jButton18.setEnabled(true);
        }
        jTable1.setDefaultEditor(Object.class, null);
        jTable2.setDefaultEditor(Object.class, null);
        jTable3.setDefaultEditor(Object.class, null);
        jTable1.setDefaultEditor(Double.class, null);
        try {
            LoadCouponList();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        LoadKMSPList();
        LoadKMHDList();
        LoadRowValueToTextFDCp(jTable3);
        LoadRowValueToTextFDKmsp(jTable2);
        LoadRowValueToTextFDKmhd(jTable1);
        LoadComboBox();
        jDateChooser1.setVisible(false);
        jRadioButton1.setVisible(false);
        jRadioButton2.setVisible(false);
        jTextField1.setVisible(true);
        jRadioButton1.setSelected(true);
        jRadioButton3.setSelected(true);
        jDateChooser2.setVisible(false);
        jRadioButton3.setVisible(false);
        jRadioButton4.setVisible(false);
        jComboBox1.setRenderer(new DefaultListCellRenderer() {
            @Override
            public void paint(Graphics g) {
                setBackground(Color.WHITE);
                setForeground(Color.BLACK);
                super.paint(g);
            }
        });
        jComboBox10.setRenderer(new DefaultListCellRenderer() {
            @Override
            public void paint(Graphics g) {
                setBackground(Color.WHITE);
                setForeground(Color.BLACK);
                super.paint(g);
            }
        });
        jComboBox11.setRenderer(new DefaultListCellRenderer() {
            @Override
            public void paint(Graphics g) {
                setBackground(Color.WHITE);
                setForeground(Color.BLACK);
                super.paint(g);
            }
        });
    }
    
    public KhuyenMaiJPanel (NhanVien user, ChucVu permission) throws ClassNotFoundException, SQLException {
        this.user=user;
        cv=permission;
        initComponents();
        SetUp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void LoadCouponList() throws SQLException, ClassNotFoundException
    {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Mã Coupon");
        dtm.addColumn("Code");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        dtm.addColumn("Mã KMHD");
        jTable3.setModel(dtm);
        ArrayList<Coupon> arr = new ArrayList<Coupon>();
        arr = cpBUS.getAllCouponNotDeleted();
        for(int i = 0; i < arr.size(); i++){
                Coupon cp = arr.get(i);
                int id = cp.getMaCP();
                String cd = cp.getCode();
                int tlad = cp.getTongLuotApDung();
                int tldd = cp.getTongLuotDaDung();
                int makmhd = cp.getMaKMHD();
                Object[] row = {id,cd,tlad,tldd,makmhd};
                dtm.addRow(row);
        }
    }
    
    public void LoadKMSPList() throws ClassNotFoundException, SQLException
    {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Mã KMSP");
        dtm.addColumn("Ngày bắt đầu");
        dtm.addColumn("Ngày kết thúc");
        dtm.addColumn("Phần trăm giảm");
        dtm.addColumn("Số tiền giảm");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        dtm.addColumn("Mã SP");
        jTable2.setModel(dtm);
        //SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        ArrayList<KhuyenMaiSanPham> arr = new ArrayList<KhuyenMaiSanPham>();
        arr = kmspBUS.getAllKMSPNotDeleted();
        for(int i = 0; i < arr.size(); i++){
                KhuyenMaiSanPham kmsp = arr.get(i);
                int id = kmsp.getMaKMSP();
                Timestamp nbd = kmsp.getNgayBatDau();
                Timestamp nkt = kmsp.getNgayKetThuc();
                float ptg = kmsp.getPhanTramGiam();
                double stg= kmsp.getSoTienGiam();
                int tlad = kmsp.getTongLuotApDung();
                int tldd = kmsp.getTongLuotDaDung();
                int masp = kmsp.getMaSP();
                Object[] row = {id,nbd,nkt,ptg,stg,tlad,tldd,masp};
                dtm.addRow(row);
        }
    }
    
    public void LoadKMHDList() throws SQLException, ClassNotFoundException
    {
        DefaultTableModel dtm = new DefaultTableModel(){
            public Class getColumnClass(int column) {
                    if(column==4)
                    {
                        return Double.class;
                    }
                    return String.class;
                }
        };
        dtm.addColumn("Mã KMHD");
        dtm.addColumn("Tên KM");
        dtm.addColumn("Ngày bắt đầu");
        dtm.addColumn("Ngày kết thúc");
        dtm.addColumn("Đơn hàng tối thiểu");
        dtm.addColumn("Phần trăm giảm");
        dtm.addColumn("Số tiền giảm");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        jTable1.setModel(dtm);
        ArrayList<KhuyenMaiHoaDon> arr=kmhdBUS.getKmhdNotDeleted();
        for(int i=0;i<arr.size();i++)
        {
            Object[] row = {arr.get(i).getMaKMHD(),arr.get(i).getTenKM(),arr.get(i).getNgayBatDau(),arr.get(i).getNgayKetThuc(),arr.get(i).getDonHangToiThieu(),arr.get(i).getPhanTramGiam(),arr.get(i).getSoTienGiam(),arr.get(i).getTongLuotApDung(),arr.get(i).getTongLuotDaDung()};
            dtm.addRow(row);
        }
    }
    
    public void LoadRowValueToTextFDCp(JTable table)
    {
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            int viewRow = table.getSelectedRow();
            if (!event.getValueIsAdjusting() && viewRow != -1) {
                System.out.println(table.getValueAt(table.getSelectedRow(), 0).toString());
                int viewrow=table.convertRowIndexToModel(viewRow);
                jTextField20.setText(table.getModel().getValueAt(viewrow, 0).toString());
                jTextField19.setText(table.getModel().getValueAt(viewrow, 1).toString());
                jSpinner18.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 2).toString()));
                jSpinner19.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 3).toString()));
                jComboBox17.setSelectedItem(table.getModel().getValueAt(viewrow, 4).toString());
            }
        }
    });
    }
    
    public void LoadRowValueToTextFDKmsp(JTable table)
    {
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            SimpleDateFormat sdfHour = new SimpleDateFormat("HH");
            SimpleDateFormat sdfMinute = new SimpleDateFormat("mm");
            int viewRow = table.getSelectedRow();
            if (!event.getValueIsAdjusting() && viewRow != -1) {
                System.out.println(table.getValueAt(table.getSelectedRow(), 0).toString());
                int viewrow=table.convertRowIndexToModel(viewRow);
                jTextField28.setText(table.getModel().getValueAt(viewrow, 0).toString());
                try {
                    jDateChooser11.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(table.getModel().getValueAt(viewrow, 1).toString()));
                    jDateChooser12.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(table.getModel().getValueAt(viewrow, 2).toString()));
                    jSpinner1.setValue(Integer.valueOf(sdfHour.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 1).toString()))));
                    jSpinner2.setValue(Integer.valueOf(sdfMinute.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 1).toString()))));
                    jSpinner3.setValue(Integer.valueOf(sdfHour.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 2).toString()))));
                    jSpinner4.setValue(Integer.valueOf(sdfMinute.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 2).toString()))));
                } catch (ParseException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                jSpinner11.setValue(Float.parseFloat(table.getModel().getValueAt(viewrow, 3).toString()));
                jSpinner12.setValue(Double.parseDouble(table.getModel().getValueAt(viewrow, 4).toString()));
                jSpinner16.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 5).toString()));
                jSpinner17.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 6).toString()));
                jComboBox13.setSelectedItem(table.getModel().getValueAt(viewrow, 7).toString());
            }
        }
    });
    }
    
    public void LoadRowValueToTextFDKmhd(JTable table)
    {
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
        public void valueChanged(ListSelectionEvent event) {
            // do some actions here, for example
            SimpleDateFormat sdfHour = new SimpleDateFormat("HH");
            SimpleDateFormat sdfMinute = new SimpleDateFormat("mm");
            int viewRow = table.getSelectedRow();
            if (!event.getValueIsAdjusting() && viewRow != -1) {
                System.out.println(table.getValueAt(table.getSelectedRow(), 0).toString());
                int viewrow=table.convertRowIndexToModel(viewRow);
                tfkmhd.setText(table.getModel().getValueAt(viewrow, 0).toString());
                tftkm.setText(table.getModel().getValueAt(viewrow, 1).toString());
                try {
                    dcnbd.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(table.getModel().getValueAt(viewrow, 2).toString()));
                    dcnkt.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(table.getModel().getValueAt(viewrow, 3).toString()));
                    jSpinner5.setValue(Integer.valueOf(sdfHour.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 2).toString()))));
                    jSpinner6.setValue(Integer.valueOf(sdfMinute.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 2).toString()))));
                    jSpinner7.setValue(Integer.valueOf(sdfHour.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 3).toString()))));
                    jSpinner8.setValue(Integer.valueOf(sdfMinute.format(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(table.getModel().getValueAt(viewrow, 3).toString()))));
                } catch (ParseException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                DecimalFormat format = new DecimalFormat("#######",new DecimalFormatSymbols(Locale.GERMAN));
                jSpinner15.setValue(Double.parseDouble(table.getModel().getValueAt(viewrow, 4).toString()));
                jSpinner9.setValue(Float.parseFloat(table.getModel().getValueAt(viewrow, 5).toString()));
                jSpinner10.setValue(Double.parseDouble(table.getModel().getValueAt(viewrow, 6).toString()));
                jSpinner13.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 7).toString()));
                jSpinner14.setValue(Integer.parseInt(table.getModel().getValueAt(viewrow, 8).toString()));
            }
        }
    });
    }
    
    public void LoadComboBox() throws SQLException, ClassNotFoundException
    {
        jComboBox17.setModel(new DefaultComboBoxModel(kmhdBUS.getAllMaKMHDNotDeleted()));
        String[] arrmaspKMSP=kmspBUS.getMaSPFromKMSP();
        String[] arrmasp=kmspBUS.getMaSP();
        List<String> arr1=new ArrayList<String>(Arrays.asList(arrmasp));
        for(int i=0;i<arrmaspKMSP.length;i++)
        {
            arr1.remove(arrmaspKMSP[i]);
        }
        jComboBox13.setModel(new DefaultComboBoxModel(arr1.toArray(new String[0])));
        String[] gg={"Mã KMHD","Tên KM","Ngày bắt đầu","Ngày kết thúc","Đơn hàng tối thiểu","Phần trăm giảm","Số tiền giảm","Tổng lượt áp dụng","Tổng lượt đã dùng"};
        jComboBox1.setModel(new DefaultComboBoxModel(gg));
        String[] ff={"Mã KMSP","Ngày bắt đầu","Ngày kết thúc","Phần trăm giảm","Số tiền giảm","Tổng lượt áp dụng","Tổng lượt đã dùng","Mã SP"};
        jComboBox10.setModel(new DefaultComboBoxModel(ff));
        String[] hh={"Mã Coupon","Code","Tổng lượt áp dụng","Tổng lượt đã dùng","Mã KMHD"};
        jComboBox11.setModel(new DefaultComboBoxModel(hh));
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDatePickerUtil1 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil2 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        jDatePickerUtil3 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        draggableRoundPanel1 = new CUSTOM.DraggableRoundPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        draggableRoundPanel3 = new CUSTOM.DraggableRoundPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        draggableRoundPanel4 = new CUSTOM.DraggableRoundPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        draggableRoundPanel19 = new CUSTOM.DraggableRoundPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        dcnbd = new com.toedter.calendar.JDateChooser();
        jLabel61 = new javax.swing.JLabel();
        dcnkt = new com.toedter.calendar.JDateChooser();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel75 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jSpinner7 = new javax.swing.JSpinner();
        jLabel76 = new javax.swing.JLabel();
        jSpinner8 = new javax.swing.JSpinner();
        tfkmhd = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        tftkm = new javax.swing.JTextField();
        jSpinner9 = new javax.swing.JSpinner();
        jSpinner15 = new javax.swing.JSpinner();
        jPanel22 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jSpinner10 = new javax.swing.JSpinner();
        jSpinner13 = new javax.swing.JSpinner();
        jSpinner14 = new javax.swing.JSpinner();
        jPanel18 = new javax.swing.JPanel();
        bthem = new javax.swing.JButton();
        bsua = new javax.swing.JButton();
        bxoa = new javax.swing.JButton();
        bxoanhap = new javax.swing.JButton();
        brefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        draggableRoundPanel7 = new CUSTOM.DraggableRoundPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        draggableRoundPanel12 = new CUSTOM.DraggableRoundPanel();
        jComboBox10 = new javax.swing.JComboBox<>();
        jButton17 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        draggableRoundPanel16 = new CUSTOM.DraggableRoundPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jDateChooser11 = new com.toedter.calendar.JDateChooser();
        jLabel50 = new javax.swing.JLabel();
        jDateChooser12 = new com.toedter.calendar.JDateChooser();
        jLabel69 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel73 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel74 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jPanel9 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jComboBox13 = new javax.swing.JComboBox<>();
        jSpinner11 = new javax.swing.JSpinner();
        jSpinner12 = new javax.swing.JSpinner();
        jPanel16 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jSpinner16 = new javax.swing.JSpinner();
        jSpinner17 = new javax.swing.JSpinner();
        jPanel17 = new javax.swing.JPanel();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        draggableRoundPanel10 = new CUSTOM.DraggableRoundPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        draggableRoundPanel13 = new CUSTOM.DraggableRoundPanel();
        jComboBox11 = new javax.swing.JComboBox<>();
        jTextField12 = new javax.swing.JTextField();
        jButton18 = new javax.swing.JButton();
        draggableRoundPanel17 = new CUSTOM.DraggableRoundPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jComboBox17 = new javax.swing.JComboBox<>();
        jTextField20 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jSpinner18 = new javax.swing.JSpinner();
        jSpinner19 = new javax.swing.JSpinner();
        jPanel13 = new javax.swing.JPanel();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();

        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton2);

        buttonGroup2.add(jRadioButton3);
        buttonGroup2.add(jRadioButton4);

        setPreferredSize(new java.awt.Dimension(1133, 668));
        setLayout(new java.awt.BorderLayout());

        draggableRoundPanel1.setBackground(new java.awt.Color(31, 31, 31));
        draggableRoundPanel1.setMinimumSize(new java.awt.Dimension(800, 400));
        draggableRoundPanel1.setPreferredSize(new java.awt.Dimension(1133, 668));
        draggableRoundPanel1.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 101, 0));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(800, 400));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1155, 713));

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.setLayout(new java.awt.BorderLayout(15,15));

        draggableRoundPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        draggableRoundPanel3.setPreferredSize(new java.awt.Dimension(1143, 50));
        draggableRoundPanel3.setLayout(new java.awt.BorderLayout());

        jComboBox1.setBackground(new java.awt.Color(240, 240, 240));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setMaximumSize(new java.awt.Dimension(72, 22));
        jComboBox1.setPreferredSize(new java.awt.Dimension(130, 72));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        draggableRoundPanel3.add(jComboBox1, java.awt.BorderLayout.WEST);

        jButton1.setOpaque(true);
        jButton1.setBackground(new java.awt.Color(255, 101, 0));
        jButton1.setBorderPainted(false);
        jButton1.setText("Tìm kiếm");
        jButton1.setEnabled(false);
        jButton1.setPreferredSize(new java.awt.Dimension(90, 15));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        draggableRoundPanel3.add(jButton1, java.awt.BorderLayout.EAST);

        jPanel4.setBackground(new java.awt.Color(31, 31, 31));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextField1.setMinimumSize(new java.awt.Dimension(500, 72));
        jTextField1.setPreferredSize(new java.awt.Dimension(160, 72));
        jPanel4.add(jTextField1, new java.awt.GridBagConstraints());

        jDateChooser1.setMinimumSize(new java.awt.Dimension(400, 72));
        jDateChooser1.setPreferredSize(new java.awt.Dimension(160, 72));
        jPanel4.add(jDateChooser1, new java.awt.GridBagConstraints());

        jRadioButton1.setBackground(new java.awt.Color(31, 31, 31));
        jRadioButton1.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButton1.setText("Sau ngày chọn");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jRadioButton1, gridBagConstraints);

        jRadioButton2.setBackground(new java.awt.Color(31, 31, 31));
        jRadioButton2.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButton2.setText("Trước ngày chọn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel4.add(jRadioButton2, gridBagConstraints);

        draggableRoundPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel1.add(draggableRoundPanel3, java.awt.BorderLayout.PAGE_START);

        draggableRoundPanel4.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(31, 31, 31));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        draggableRoundPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(draggableRoundPanel4, java.awt.BorderLayout.CENTER);

        draggableRoundPanel19.setBackground(new java.awt.Color(31, 31, 31));
        draggableRoundPanel19.setLayout(new java.awt.GridBagLayout());

        jPanel14.setBackground(new java.awt.Color(31, 31, 31));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel57.setForeground(new java.awt.Color(240, 240, 240));
        jLabel57.setText("Mã KMHD:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel14.add(jLabel57, gridBagConstraints);

        jLabel60.setForeground(new java.awt.Color(240, 240, 240));
        jLabel60.setText("Ngày bắt đầu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 10);
        jPanel14.add(jLabel60, gridBagConstraints);

        dcnbd.setMinimumSize(new java.awt.Dimension(82, 22));
        dcnbd.setPreferredSize(new java.awt.Dimension(90, 22));
        dcnbd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcnbdPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel14.add(dcnbd, gridBagConstraints);

        jLabel61.setForeground(new java.awt.Color(240, 240, 240));
        jLabel61.setText("Ngày kết thúc:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel14.add(jLabel61, gridBagConstraints);

        dcnkt.setMinimumSize(new java.awt.Dimension(82, 22));
        dcnkt.setPreferredSize(new java.awt.Dimension(90, 22));
        dcnkt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcnktPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel14.add(dcnkt, gridBagConstraints);

        jLabel65.setForeground(new java.awt.Color(240, 240, 240));
        jLabel65.setText("Thời gian:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 10);
        jPanel14.add(jLabel65, gridBagConstraints);

        jLabel66.setForeground(new java.awt.Color(240, 240, 240));
        jLabel66.setText("Thời gian:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel14.add(jLabel66, gridBagConstraints);

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel14.add(jSpinner5, gridBagConstraints);

        jLabel75.setForeground(new java.awt.Color(240, 240, 240));
        jLabel75.setText(":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 20, 5);
        jPanel14.add(jLabel75, gridBagConstraints);

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel14.add(jSpinner6, gridBagConstraints);

        jSpinner7.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel14.add(jSpinner7, gridBagConstraints);

        jLabel76.setForeground(new java.awt.Color(240, 240, 240));
        jLabel76.setText(":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel14.add(jLabel76, gridBagConstraints);

        jSpinner8.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel14.add(jSpinner8, gridBagConstraints);

        tfkmhd.setEditable(false);
        tfkmhd.setMinimumSize(new java.awt.Dimension(82, 22));
        tfkmhd.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel14.add(tfkmhd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        draggableRoundPanel19.add(jPanel14, gridBagConstraints);

        jPanel21.setBackground(new java.awt.Color(31, 31, 31));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        jLabel45.setForeground(new java.awt.Color(240, 240, 240));
        jLabel45.setText("Phần trăm giảm:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel21.add(jLabel45, gridBagConstraints);

        jLabel46.setForeground(new java.awt.Color(240, 240, 240));
        jLabel46.setText("Đơn hàng tối thiểu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel21.add(jLabel46, gridBagConstraints);

        jLabel47.setForeground(new java.awt.Color(240, 240, 240));
        jLabel47.setText("Tên khuyến mãi:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel21.add(jLabel47, gridBagConstraints);

        tftkm.setMinimumSize(new java.awt.Dimension(72, 22));
        tftkm.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel21.add(tftkm, gridBagConstraints);

        jSpinner9.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(100.0f), Float.valueOf(1.0f)));
        jSpinner9.setMinimumSize(new java.awt.Dimension(72, 22));
        jSpinner9.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner9StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel21.add(jSpinner9, gridBagConstraints);

        jSpinner15.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 10000.0d));
        jSpinner15.setMinimumSize(new java.awt.Dimension(72, 22));
        jSpinner15.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner15.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner15StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel21.add(jSpinner15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        draggableRoundPanel19.add(jPanel21, gridBagConstraints);

        jPanel22.setBackground(new java.awt.Color(31, 31, 31));
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel62.setForeground(new java.awt.Color(240, 240, 240));
        jLabel62.setText("Tổng lượt áp dụng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel22.add(jLabel62, gridBagConstraints);

        jLabel63.setForeground(new java.awt.Color(240, 240, 240));
        jLabel63.setText("Tổng lượt đã dùng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel22.add(jLabel63, gridBagConstraints);

        jLabel64.setForeground(new java.awt.Color(240, 240, 240));
        jLabel64.setText("Số tiền giảm:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel22.add(jLabel64, gridBagConstraints);

        jSpinner10.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 10000.0d));
        jSpinner10.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner10.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner10StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel22.add(jSpinner10, gridBagConstraints);

        jSpinner13.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSpinner13.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner13.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner13.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner13StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel22.add(jSpinner13, gridBagConstraints);

        jSpinner14.setModel(new javax.swing.SpinnerNumberModel(0, 0, 0, 1));
        jSpinner14.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner14.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel22.add(jSpinner14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        draggableRoundPanel19.add(jPanel22, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(31, 31, 31));
        jPanel18.setMinimumSize(new java.awt.Dimension(155, 120));
        jPanel18.setPreferredSize(new java.awt.Dimension(155, 120));
        jPanel18.setLayout(new java.awt.GridBagLayout());

        bthem.setBackground(new java.awt.Color(255, 101, 0));
        bthem.setText("Thêm");
        bthem.setEnabled(false);
        bthem.setBorderPainted(false);
        bthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel18.add(bthem, gridBagConstraints);

        bsua.setBackground(new java.awt.Color(255, 101, 0));
        bsua.setText("Sửa");
        bsua.setEnabled(false);
        bsua.setMinimumSize(new java.awt.Dimension(63, 25));
        bsua.setPreferredSize(new java.awt.Dimension(63, 25));
        bsua.setBorderPainted(false);
        bsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsuaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel18.add(bsua, gridBagConstraints);

        bxoa.setBackground(new java.awt.Color(255, 101, 0));
        bxoa.setText("Xóa");
        bxoa.setEnabled(false);
        bxoa.setMinimumSize(new java.awt.Dimension(63, 25));
        bxoa.setPreferredSize(new java.awt.Dimension(63, 25));
        bxoa.setBorderPainted(false);
        bxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bxoaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel18.add(bxoa, gridBagConstraints);

        bxoanhap.setBackground(new java.awt.Color(255, 101, 0));
        bxoanhap.setText("Xóa nhập");
        bxoanhap.setBorderPainted(false);
        bxoanhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bxoanhapActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel18.add(bxoanhap, gridBagConstraints);

        brefresh.setBackground(new java.awt.Color(255, 101, 0));
        brefresh.setText("Refresh");
        brefresh.setBorderPainted(false);
        brefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel18.add(brefresh, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 0);
        draggableRoundPanel19.add(jPanel18, gridBagConstraints);

        jPanel1.add(draggableRoundPanel19, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("Khuyến mãi hóa đơn", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());
        jPanel2.setLayout(new java.awt.BorderLayout(15,15));

        draggableRoundPanel7.setLayout(new java.awt.BorderLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        draggableRoundPanel7.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.add(draggableRoundPanel7, java.awt.BorderLayout.CENTER);

        draggableRoundPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        draggableRoundPanel12.setPreferredSize(new java.awt.Dimension(1143, 50));
        draggableRoundPanel12.setLayout(new java.awt.BorderLayout());

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox10.setMaximumSize(new java.awt.Dimension(72, 22));
        jComboBox10.setPreferredSize(new java.awt.Dimension(130, 72));
        jComboBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox10ActionPerformed(evt);
            }
        });
        draggableRoundPanel12.add(jComboBox10, java.awt.BorderLayout.WEST);

        jButton17.setBackground(new java.awt.Color(255, 101, 0));
        jButton17.setText("Tìm kiếm");
        jButton17.setBorderPainted(false);
        jButton17.setEnabled(false);
        jButton17.setPreferredSize(new java.awt.Dimension(90, 15));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        draggableRoundPanel12.add(jButton17, java.awt.BorderLayout.LINE_END);

        jPanel5.setBackground(new java.awt.Color(31, 31, 31));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTextField2.setMinimumSize(new java.awt.Dimension(500, 72));
        jTextField2.setPreferredSize(new java.awt.Dimension(160, 72));
        jPanel5.add(jTextField2, new java.awt.GridBagConstraints());

        jDateChooser2.setMinimumSize(new java.awt.Dimension(400, 72));
        jDateChooser2.setPreferredSize(new java.awt.Dimension(160, 72));
        jPanel5.add(jDateChooser2, new java.awt.GridBagConstraints());

        jRadioButton3.setBackground(new java.awt.Color(31, 31, 31));
        jRadioButton3.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButton3.setText("Sau ngày chọn");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jRadioButton3, gridBagConstraints);

        jRadioButton4.setBackground(new java.awt.Color(31, 31, 31));
        jRadioButton4.setForeground(new java.awt.Color(240, 240, 240));
        jRadioButton4.setText("Trước ngày chọn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel5.add(jRadioButton4, gridBagConstraints);

        draggableRoundPanel12.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel2.add(draggableRoundPanel12, java.awt.BorderLayout.NORTH);

        draggableRoundPanel16.setBackground(new java.awt.Color(31, 31, 31));
        draggableRoundPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBackground(new java.awt.Color(31, 31, 31));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel48.setBackground(new java.awt.Color(31, 31, 31));
        jLabel48.setForeground(new java.awt.Color(240, 240, 240));
        jLabel48.setText("Mã KMSP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel8.add(jLabel48, gridBagConstraints);

        jLabel49.setBackground(new java.awt.Color(31, 31, 31));
        jLabel49.setForeground(new java.awt.Color(240, 240, 240));
        jLabel49.setText("Ngày bắt đầu:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 10);
        jPanel8.add(jLabel49, gridBagConstraints);

        jDateChooser11.setMinimumSize(new java.awt.Dimension(82, 22));
        jDateChooser11.setPreferredSize(new java.awt.Dimension(90, 22));
        jDateChooser11.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser11PropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel8.add(jDateChooser11, gridBagConstraints);

        jLabel50.setBackground(new java.awt.Color(31, 31, 31));
        jLabel50.setForeground(new java.awt.Color(240, 240, 240));
        jLabel50.setText("Ngày kết thúc:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(jLabel50, gridBagConstraints);

        jDateChooser12.setMinimumSize(new java.awt.Dimension(82, 22));
        jDateChooser12.setPreferredSize(new java.awt.Dimension(90, 22));
        jDateChooser12.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser12PropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel8.add(jDateChooser12, gridBagConstraints);

        jLabel69.setBackground(new java.awt.Color(31, 31, 31));
        jLabel69.setForeground(new java.awt.Color(240, 240, 240));
        jLabel69.setText("Thời gian:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 10);
        jPanel8.add(jLabel69, gridBagConstraints);

        jLabel71.setBackground(new java.awt.Color(31, 31, 31));
        jLabel71.setForeground(new java.awt.Color(240, 240, 240));
        jLabel71.setText("Thời gian:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(jLabel71, gridBagConstraints);

        jTextField28.setEditable(false);
        jTextField28.setMinimumSize(new java.awt.Dimension(82, 22));
        jTextField28.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel8.add(jTextField28, gridBagConstraints);

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel8.add(jSpinner1, gridBagConstraints);

        jLabel73.setBackground(new java.awt.Color(31, 31, 31));
        jLabel73.setForeground(new java.awt.Color(240, 240, 240));
        jLabel73.setText(":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 20, 5);
        jPanel8.add(jLabel73, gridBagConstraints);

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel8.add(jSpinner2, gridBagConstraints);

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel8.add(jSpinner3, gridBagConstraints);

        jLabel74.setBackground(new java.awt.Color(31, 31, 31));
        jLabel74.setForeground(new java.awt.Color(240, 240, 240));
        jLabel74.setText(":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel8.add(jLabel74, gridBagConstraints);

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel8.add(jSpinner4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        draggableRoundPanel16.add(jPanel8, gridBagConstraints);

        jPanel9.setBackground(new java.awt.Color(31, 31, 31));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel36.setBackground(new java.awt.Color(31, 31, 31));
        jLabel36.setForeground(new java.awt.Color(240, 240, 240));
        jLabel36.setText("Phần trăm giảm:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel9.add(jLabel36, gridBagConstraints);

        jLabel37.setBackground(new java.awt.Color(31, 31, 31));
        jLabel37.setForeground(new java.awt.Color(240, 240, 240));
        jLabel37.setText("Số tiền giảm:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel9.add(jLabel37, gridBagConstraints);

        jLabel38.setBackground(new java.awt.Color(31, 31, 31));
        jLabel38.setForeground(new java.awt.Color(240, 240, 240));
        jLabel38.setText("Mã SP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel9.add(jLabel38, gridBagConstraints);

        jComboBox13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox13.setMinimumSize(new java.awt.Dimension(82, 22));
        jComboBox13.setPreferredSize(new java.awt.Dimension(160, 22));
        jComboBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel9.add(jComboBox13, gridBagConstraints);

        jSpinner11.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(100.0f), Float.valueOf(1.0f)));
        jSpinner11.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner11.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner11StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel9.add(jSpinner11, gridBagConstraints);

        jSpinner12.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 10000.0d));
        jSpinner12.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner12.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner12StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel9.add(jSpinner12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        draggableRoundPanel16.add(jPanel9, gridBagConstraints);

        jPanel16.setBackground(new java.awt.Color(31, 31, 31));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        jLabel51.setBackground(new java.awt.Color(31, 31, 31));
        jLabel51.setForeground(new java.awt.Color(240, 240, 240));
        jLabel51.setText("Tổng lượt áp dụng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel16.add(jLabel51, gridBagConstraints);

        jLabel52.setBackground(new java.awt.Color(31, 31, 31));
        jLabel52.setForeground(new java.awt.Color(240, 240, 240));
        jLabel52.setText("Tổng lượt đã dùng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel16.add(jLabel52, gridBagConstraints);

        jSpinner16.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSpinner16.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner16.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner16.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner16StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel16.add(jSpinner16, gridBagConstraints);

        jSpinner17.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner17.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner17.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel16.add(jSpinner17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        draggableRoundPanel16.add(jPanel16, gridBagConstraints);

        jPanel17.setBackground(new java.awt.Color(31, 31, 31));
        jPanel17.setMinimumSize(new java.awt.Dimension(155, 120));
        jPanel17.setPreferredSize(new java.awt.Dimension(155, 120));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jButton31.setBackground(new java.awt.Color(255, 101, 0));
        jButton31.setText("Thêm");
        jButton31.setEnabled(false);
        jButton31.setBorderPainted(false);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jButton31, gridBagConstraints);

        jButton32.setBackground(new java.awt.Color(255, 101, 0));
        jButton32.setText("Sửa");
        jButton32.setEnabled(false);
        jButton32.setMinimumSize(new java.awt.Dimension(63, 25));
        jButton32.setBorderPainted(false);
        jButton32.setPreferredSize(new java.awt.Dimension(63, 25));
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel17.add(jButton32, gridBagConstraints);

        jButton33.setBackground(new java.awt.Color(255, 101, 0));
        jButton33.setText("Xóa");
        jButton33.setEnabled(false);
        jButton33.setMinimumSize(new java.awt.Dimension(63, 25));
        jButton33.setBorderPainted(false);
        jButton33.setPreferredSize(new java.awt.Dimension(63, 25));
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel17.add(jButton33, gridBagConstraints);

        jButton30.setBackground(new java.awt.Color(255, 101, 0));
        jButton30.setText("Xóa nhập");
        jButton30.setBorderPainted(false);
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel17.add(jButton30, gridBagConstraints);

        jButton34.setBackground(new java.awt.Color(255, 101, 0));
        jButton34.setText("Refesh");
        jButton34.setBorderPainted(false);
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel17.add(jButton34, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 0);
        draggableRoundPanel16.add(jPanel17, gridBagConstraints);

        jPanel2.add(draggableRoundPanel16, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("Khuyến mãi sản phẩm", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.setLayout(new java.awt.BorderLayout(15,15));

        draggableRoundPanel10.setLayout(new java.awt.BorderLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        draggableRoundPanel10.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel3.add(draggableRoundPanel10, java.awt.BorderLayout.CENTER);

        draggableRoundPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        draggableRoundPanel13.setPreferredSize(new java.awt.Dimension(1143, 50));
        draggableRoundPanel13.setLayout(new java.awt.BorderLayout());

        jComboBox11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox11.setMaximumSize(new java.awt.Dimension(72, 22));
        jComboBox11.setPreferredSize(new java.awt.Dimension(130, 72));
        draggableRoundPanel13.add(jComboBox11, java.awt.BorderLayout.WEST);

        jTextField12.setMaximumSize(new java.awt.Dimension(64, 15));
        jTextField12.setMinimumSize(new java.awt.Dimension(64, 15));
        jTextField12.setPreferredSize(new java.awt.Dimension(64, 15));
        draggableRoundPanel13.add(jTextField12, java.awt.BorderLayout.CENTER);

        jButton18.setBackground(new java.awt.Color(255, 101, 0));
        jButton18.setText("Tìm kiếm");
        jButton18.setBorderPainted(false);
        jButton18.setEnabled(false);
        jButton18.setPreferredSize(new java.awt.Dimension(90, 15));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        draggableRoundPanel13.add(jButton18, java.awt.BorderLayout.LINE_END);

        jPanel3.add(draggableRoundPanel13, java.awt.BorderLayout.NORTH);

        draggableRoundPanel17.setBackground(new java.awt.Color(31, 31, 31));
        draggableRoundPanel17.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(31, 31, 31));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel14.setForeground(new java.awt.Color(240, 240, 240));
        jLabel14.setText("Mã CP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel11.add(jLabel14, gridBagConstraints);

        jLabel22.setForeground(new java.awt.Color(240, 240, 240));
        jLabel22.setText("Code:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel11.add(jLabel22, gridBagConstraints);

        jTextField19.setMinimumSize(new java.awt.Dimension(82, 22));
        jTextField19.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel11.add(jTextField19, gridBagConstraints);

        jLabel40.setForeground(new java.awt.Color(240, 240, 240));
        jLabel40.setText("Mã KMHD:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel11.add(jLabel40, gridBagConstraints);

        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox17.setMinimumSize(new java.awt.Dimension(82, 22));
        jComboBox17.setPreferredSize(new java.awt.Dimension(160, 22));
        jComboBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel11.add(jComboBox17, gridBagConstraints);

        jTextField20.setEditable(false);
        jTextField20.setMinimumSize(new java.awt.Dimension(82, 22));
        jTextField20.setPreferredSize(new java.awt.Dimension(160, 22));
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel11.add(jTextField20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        draggableRoundPanel17.add(jPanel11, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(31, 31, 31));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel41.setForeground(new java.awt.Color(240, 240, 240));
        jLabel41.setText("Tổng lượt áp dụng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 20);
        jPanel12.add(jLabel41, gridBagConstraints);

        jLabel42.setForeground(new java.awt.Color(240, 240, 240));
        jLabel42.setText("Tổng lượt đã dùng:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel12.add(jLabel42, gridBagConstraints);

        jSpinner18.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSpinner18.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner18.setPreferredSize(new java.awt.Dimension(160, 22));
        jSpinner18.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner18StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel12.add(jSpinner18, gridBagConstraints);

        jSpinner19.setModel(new javax.swing.SpinnerNumberModel(0, 0, 0, 1));
        jSpinner19.setMinimumSize(new java.awt.Dimension(82, 22));
        jSpinner19.setPreferredSize(new java.awt.Dimension(160, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        jPanel12.add(jSpinner19, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        draggableRoundPanel17.add(jPanel12, gridBagConstraints);

        jPanel13.setBackground(new java.awt.Color(31, 31, 31));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jButton25.setBackground(new java.awt.Color(255, 101, 0));
        jButton25.setText("Thêm");
        jButton25.setEnabled(false);
        jButton25.setBorderPainted(false);
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel13.add(jButton25, gridBagConstraints);

        jButton26.setBackground(new java.awt.Color(255, 101, 0));
        jButton26.setText("Sửa");
        jButton26.setBorderPainted(false);
        jButton26.setEnabled(false);
        jButton26.setMinimumSize(new java.awt.Dimension(63, 25));
        jButton26.setPreferredSize(new java.awt.Dimension(63, 25));
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel13.add(jButton26, gridBagConstraints);

        jButton27.setBackground(new java.awt.Color(255, 101, 0));
        jButton27.setText("Xóa");
        jButton27.setEnabled(false);
        jButton27.setMinimumSize(new java.awt.Dimension(63, 25));
        jButton27.setBorderPainted(false);
        jButton27.setPreferredSize(new java.awt.Dimension(63, 25));
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        jPanel13.add(jButton27, gridBagConstraints);

        jButton28.setBackground(new java.awt.Color(255, 101, 0));
        jButton28.setText("Xóa nhập");
        jButton28.setBorderPainted(false);
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel13.add(jButton28, gridBagConstraints);

        jButton29.setBackground(new java.awt.Color(255, 101, 0));
        jButton29.setText("Refesh");
        jButton29.setBorderPainted(false);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 20, 0);
        jPanel13.add(jButton29, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 0);
        draggableRoundPanel17.add(jPanel13, gridBagConstraints);

        jPanel3.add(draggableRoundPanel17, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("Coupon", jPanel3);

        draggableRoundPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        add(draggableRoundPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        try {
            // TODO add your handling code here:
            LoadCouponList();
            LoadComboBox();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        jTable3.getSelectionModel().clearSelection();
        jTextField20.setText("");
        jTextField19.setText("");
        jSpinner18.setValue(1);
        jSpinner19.setValue(0);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        if(jTable3.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để xóa!");
        }
        else for(int i=0;i<jTable3.getSelectedRows().length;i++)
        {
            try {
                cpBUS.deleteCoupon(Integer.parseInt(jTable3.getModel().getValueAt(jTable3.getSelectedRows()[i], 0).toString()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            LoadCouponList();
            LoadComboBox();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        if(jTable3.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để sửa!");
        }
        else if(jTextField19.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else if(!kt.KTKhoangCach(jTextField19.getText()))
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không được có khoảng cách!");
        }
        else if(Integer.parseInt(jSpinner18.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tổng lượt sử dụng!");
        }
        else{
                Coupon cp=new Coupon();
                cp.setMaCP(Integer.parseInt(jTextField20.getText()));
                cp.setCode(jTextField19.getText());
                cp.setMaKMHD(Integer.parseInt(jComboBox17.getItemAt(jComboBox17.getSelectedIndex())));
                cp.setTongLuotApDung((Integer)Integer.parseInt(jSpinner18.getValue().toString()));
                cp.setTongLuotDaDung((Integer)Integer.parseInt(jSpinner19.getValue().toString()));
                cp.setIsDeleted(0);
                try {
                    cpBUS.updateCoupon(cp);
                    LoadCouponList();
                    LoadComboBox();
                } catch (SQLException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        if(jTextField19.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else if(!kt.KTKhoangCach(jTextField19.getText()))
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không được có khoảng cách!");
        }
        else if(Integer.parseInt(jSpinner18.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tổng lượt sử dụng!");
        }
        else try {
            if(cpBUS.hasCode(jTextField19.getText())!=false)
            {
                JOptionPane.showMessageDialog(this, "Trùng code!");
            }
            else
            {
                Coupon cp=new Coupon();
                cp.setCode(jTextField19.getText());
                cp.setMaKMHD(Integer.parseInt(jComboBox17.getItemAt(jComboBox17.getSelectedIndex())));
                cp.setTongLuotApDung((Integer)Integer.parseInt(jSpinner18.getValue().toString()));
                cp.setTongLuotDaDung((Integer)Integer.parseInt(jSpinner19.getValue().toString()));
                cp.setIsDeleted(0);
                try {
                    cpBUS.addCoupon(cp);
                    LoadCouponList();
                    LoadComboBox();
                } catch (SQLException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if(jTextField12.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else
        {
            try {
                changeTableModelCp(cpBUS.searchCp(jComboBox11.getSelectedItem().toString(), jTextField12.getText()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        try {
            // TODO add your handling code here:
            LoadKMSPList();
            LoadComboBox();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        jDateChooser11.setDate(null);
        jDateChooser12.setDate(null);
        jSpinner1.setValue(0);
        jSpinner2.setValue(0);
        jSpinner3.setValue(0);
        jSpinner4.setValue(0);
        jSpinner11.setValue(0);
        jSpinner12.setValue(0);
        jSpinner16.setValue(0);
        jSpinner17.setValue(0);
        try {
            LoadKMSPList();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed
        // TODO add your handling code here:
        if(jTable2.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để xóa!");
        }
        else for(int i=0;i<jTable2.getSelectedRows().length;i++)
        {
            try {
                kmspBUS.deleteKhuyenMaiSanPham(Integer.parseInt(jTable2.getModel().getValueAt(jTable2.getSelectedRows()[i], 0).toString()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            LoadKMSPList();
            LoadComboBox();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        if(jTable2.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để sửa!");
        }
        else if(jDateChooser11.getDate()==null||jDateChooser12.getDate()==null)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày!");
        }
        else if((Float)Float.parseFloat(jSpinner11.getValue().toString())==0 && (Double)Double.parseDouble(jSpinner12.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa nhập phần trăm giảm hay số tiền giảm!");
        }
        else
        {
            KhuyenMaiSanPham kmsp=new KhuyenMaiSanPham();
            kmsp.setMaKMSP(Integer.parseInt(jTextField28.getText()));
            kmsp.setMaSP(Integer.parseInt(jComboBox13.getSelectedItem().toString()));
            kmsp.setPhanTramGiam((Float)jSpinner11.getValue());
            kmsp.setSoTienGiam((Double)jSpinner12.getValue());
            kmsp.setTongLuotApDung((Integer)jSpinner16.getValue());
            kmsp.setTongLuotDaDung((Integer)jSpinner17.getValue());
            kmsp.setIsDeleted(0);
            String datetime=sdfDate.format(jDateChooser11.getDate())+" "+(int)jSpinner1.getValue()+":"+(int)jSpinner2.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime);
                kmsp.setNgayBatDau(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String datetime1=sdfDate.format(jDateChooser12.getDate())+" "+(int)jSpinner3.getValue()+":"+(int)jSpinner4.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime1);
                kmsp.setNgayKetThuc(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                kmspBUS.updateKhuyenMaiSanPham(kmsp);
                LoadKMSPList();
                LoadComboBox();
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        if(jDateChooser11.getDate()==null||jDateChooser12.getDate()==null)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày!");
        }
        else if((Float)Float.parseFloat(jSpinner11.getValue().toString())==0 && (Double)Double.parseDouble(jSpinner12.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa nhập phần trăm giảm hay số tiền giảm!");
        }
        else
        {
            KhuyenMaiSanPham kmsp=new KhuyenMaiSanPham();
            kmsp.setMaSP(Integer.parseInt(jComboBox13.getSelectedItem().toString()));
            kmsp.setPhanTramGiam((Float)Float.parseFloat(jSpinner11.getValue().toString()));
            kmsp.setSoTienGiam((Double)Double.parseDouble(jSpinner12.getValue().toString()));
            kmsp.setTongLuotApDung((Integer)Integer.parseInt(jSpinner16.getValue().toString()));
            kmsp.setTongLuotDaDung((Integer)Integer.parseInt(jSpinner17.getValue().toString()));
            kmsp.setIsDeleted(0);
            String datetime=sdfDate.format(jDateChooser11.getDate())+" "+(int)jSpinner1.getValue()+":"+(int)jSpinner2.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime);
                kmsp.setNgayBatDau(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String datetime1=sdfDate.format(jDateChooser12.getDate())+" "+(int)jSpinner3.getValue()+":"+(int)jSpinner4.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime1);
                kmsp.setNgayKetThuc(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                kmspBUS.addKhuyenMaiSanPham(kmsp);
                LoadKMSPList();
                LoadComboBox();
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jSpinner16StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner16StateChanged
        // TODO add your handling code here:
        try {
            jSpinner16.commitEdit();
        } catch ( java.text.ParseException e ) {}
        SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, (int)jSpinner16.getValue(), 1);
        jSpinner17.setModel(model);
    }//GEN-LAST:event_jSpinner16StateChanged

    private void jDateChooser12PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser12PropertyChange
        // TODO add your handling code here:
        jDateChooser11.setMaxSelectableDate(jDateChooser12.getDate());
    }//GEN-LAST:event_jDateChooser12PropertyChange

    private void jDateChooser11PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser11PropertyChange
        // TODO add your handling code here:
        jDateChooser12.setMinSelectableDate(jDateChooser11.getDate());
    }//GEN-LAST:event_jDateChooser11PropertyChange

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        if(jTextField2.getText().isBlank()&&jComboBox10.getSelectedItem().toString()!="Ngày bắt đầu" && jComboBox10.getSelectedItem().toString()!="Ngày kết thúc")
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else if(jDateChooser2.getDate()==null && (jComboBox10.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox10.getSelectedItem().toString()=="Ngày kết thúc"))
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống ngày!");
        }
        else
        {
            if(jComboBox10.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox10.getSelectedItem().toString()=="Ngày kết thúc")
            {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                if(jRadioButton3.isSelected()==true)
                {
                    try {
                        changeTableModelKmsp(kmspBUS.searchKmsp(jComboBox10.getSelectedItem().toString(), dateFormat.format(jDateChooser2.getDate()), 1));
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if(jRadioButton4.isSelected()==true)
                {
                    try {
                        changeTableModelKmsp(kmspBUS.searchKmsp(jComboBox10.getSelectedItem().toString(), dateFormat.format(jDateChooser2.getDate()), 0));
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else
            {
                try {
                    changeTableModelKmsp(kmspBUS.searchKmsp(jComboBox10.getSelectedItem().toString(), jTextField2.getText(), 1));
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jComboBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox10ActionPerformed
        // TODO add your handling code here:
        if(jComboBox10.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox10.getSelectedItem().toString()=="Ngày kết thúc")
        {
            jDateChooser2.setVisible(true);
            jRadioButton3.setVisible(true);
            jRadioButton4.setVisible(true);
            jTextField2.setVisible(false);
        }
        else
        {
            jDateChooser2.setVisible(false);
            jRadioButton3.setVisible(false);
            jRadioButton4.setVisible(false);
            jTextField2.setVisible(true);
        }
    }//GEN-LAST:event_jComboBox10ActionPerformed

    private void brefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brefreshActionPerformed
        try {
            // TODO add your handling code here:
            LoadKMHDList();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_brefreshActionPerformed

    private void bxoanhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxoanhapActionPerformed
        // TODO add your handling code here:
        dcnbd.setDate(null);
        dcnkt.setDate(null);
        jSpinner5.setValue(Integer.valueOf(0));
        jSpinner6.setValue(Integer.valueOf(0));
        jSpinner7.setValue(Integer.valueOf(0));
        jSpinner8.setValue(Integer.valueOf(0));
        tfkmhd.setText("");
        tftkm.setText("");
        jSpinner9.setValue(0.0);
        jSpinner10.setValue(0);
        jSpinner15.setValue(0);
        jSpinner13.setValue(0);
        jSpinner14.setValue(0);
        try {
            LoadKMHDList();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bxoanhapActionPerformed

    private void bxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxoaActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để xóa!");
        }
        else for(int i=0;i<jTable1.getSelectedRows().length;i++)
        {
            try {
                kmhdBUS.deleteKmhd(Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRows()[i], 0).toString()));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            LoadKMHDList();
        } catch (SQLException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bxoaActionPerformed

    private void bsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsuaActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        if(jTable1.getSelectedRows().length==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa chọn hàng để sửa!");
        }
        else if(dcnbd.getDate()==null||dcnkt.getDate()==null)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày!");
        }
        else if((Float)Float.parseFloat(jSpinner9.getValue().toString())==0 && (Double)Double.parseDouble(jSpinner10.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa nhập phần trăm giảm hay số tiền giảm!");
        }
        else {
            KhuyenMaiHoaDon kmhd=new KhuyenMaiHoaDon();
            kmhd.setMaKMHD(Integer.parseInt(tfkmhd.getText()));
            kmhd.setTenKM(tftkm.getText());
            kmhd.setPhanTramGiam((Float)Float.parseFloat(jSpinner9.getValue().toString()));
            kmhd.setDonHangToiThieu((Double)jSpinner15.getValue());
            kmhd.setSoTienGiam((Double)jSpinner10.getValue());
            kmhd.setTongLuotApDung((Integer)jSpinner13.getValue());
            kmhd.setTongLuotDaDung((Integer)jSpinner14.getValue());
            String datetime=sdfDate.format(dcnbd.getDate())+" "+(int)jSpinner5.getValue()+":"+(int)jSpinner6.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime);
                kmhd.setNgayBatDau(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String datetime1=sdfDate.format(dcnkt.getDate())+" "+(int)jSpinner7.getValue()+":"+(int)jSpinner8.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime1);
                kmhd.setNgayKetThuc(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                kmhdBUS.updateKmhd(kmhd);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                LoadKMHDList();
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bsuaActionPerformed

    private void bthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthemActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        if(tftkm.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else if(dcnbd.getDate()==null||dcnkt.getDate()==null)
        {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày!");
        }
        else if((Float)Float.parseFloat(jSpinner9.getValue().toString())==0 && (Double)Double.parseDouble(jSpinner10.getValue().toString())==0)
        {
            JOptionPane.showMessageDialog(this, "Chưa nhập phần trăm giảm hay số tiền giảm!");
        }
        else {
            KhuyenMaiHoaDon kmhd=new KhuyenMaiHoaDon();
            kmhd.setTenKM(tftkm.getText());
            kmhd.setPhanTramGiam((Float)Float.parseFloat(jSpinner9.getValue().toString()));
            kmhd.setDonHangToiThieu((Double)Double.parseDouble(jSpinner15.getValue().toString()));
            kmhd.setSoTienGiam((Double)Double.parseDouble(jSpinner10.getValue().toString()));
            kmhd.setTongLuotApDung((Integer)Integer.parseInt(jSpinner13.getValue().toString()));
            kmhd.setTongLuotDaDung((Integer)Integer.parseInt(jSpinner14.getValue().toString()));
            String datetime=sdfDate.format(dcnbd.getDate())+" "+(int)jSpinner5.getValue()+":"+(int)jSpinner6.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime);
                kmhd.setNgayBatDau(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String datetime1=sdfDate.format(dcnkt.getDate())+" "+(int)jSpinner7.getValue()+":"+(int)jSpinner8.getValue()+":00";
            try {
                Date gg=dateFormat.parse(datetime1);
                kmhd.setNgayKetThuc(new Timestamp(gg.getTime()));
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                kmhdBUS.addKmhd(kmhd);
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                LoadKMHDList();
                LoadComboBox();
            } catch (SQLException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bthemActionPerformed

    private void jSpinner13StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner13StateChanged
        // TODO add your handling code here:
        try {
            jSpinner13.commitEdit();
        } catch ( java.text.ParseException e ) {}
        SpinnerNumberModel model = new SpinnerNumberModel(0, 0, (int)jSpinner13.getValue(), 1);
        jSpinner14.setModel(model);
    }//GEN-LAST:event_jSpinner13StateChanged

    private void jSpinner10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner10StateChanged
        // TODO add your handling code here:
        try {
            jSpinner10.commitEdit();
        } catch ( java.text.ParseException e ) {}
        if((Double)jSpinner10.getValue()>0)
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 0.0, 1);
            jSpinner9.setModel(model);
        }
        else
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 100, 1);
            jSpinner9.setModel(model);
        }
    }//GEN-LAST:event_jSpinner10StateChanged

    private void jSpinner15StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner15StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner15StateChanged

    private void jSpinner9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner9StateChanged
        // TODO add your handling code here:
        try {
            jSpinner9.commitEdit();
        } catch ( java.text.ParseException e ) {}
        if((Float)Float.parseFloat(jSpinner9.getValue().toString())>0)
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 0.0, 10000);
            jSpinner10.setModel(model);
        }
        else
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, Double.MAX_VALUE, 10000);
            jSpinner10.setModel(model);
        }
    }//GEN-LAST:event_jSpinner9StateChanged

    private void dcnktPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcnktPropertyChange
        // TODO add your handling code here:
        dcnbd.setMaxSelectableDate(dcnkt.getDate());
    }//GEN-LAST:event_dcnktPropertyChange

    private void dcnbdPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcnbdPropertyChange
        // TODO add your handling code here:
        dcnkt.setMinSelectableDate(dcnbd.getDate());
    }//GEN-LAST:event_dcnbdPropertyChange

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().isBlank()&&jComboBox1.getSelectedItem().toString()!="Ngày bắt đầu" && jComboBox1.getSelectedItem().toString()!="Ngày kết thúc")
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống hoặc chỉ có khoảng cách!");
        }
        else if(jDateChooser1.getDate()==null && (jComboBox1.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox1.getSelectedItem().toString()=="Ngày kết thúc"))
        {
            JOptionPane.showMessageDialog(this, "Vui lòng không bỏ trống ngày!");
        }
        else
        {
            if(jComboBox1.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox1.getSelectedItem().toString()=="Ngày kết thúc")
            {
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                if(jRadioButton1.isSelected()==true)
                {
                    try {
                        changeTableModelKmhd(kmhdBUS.searchKmhd(jComboBox1.getSelectedItem().toString(), dateFormat.format(jDateChooser1.getDate()), 1));
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                if(jRadioButton2.isSelected()==true)
                {
                    try {
                        changeTableModelKmhd(kmhdBUS.searchKmhd(jComboBox1.getSelectedItem().toString(), dateFormat.format(jDateChooser1.getDate()), 0));
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            else
            {
                try {
                    changeTableModelKmhd(kmhdBUS.searchKmhd(jComboBox1.getSelectedItem().toString(), jTextField1.getText(), 1));
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(KhuyenMaiJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem().toString()=="Ngày bắt đầu" || jComboBox1.getSelectedItem().toString()=="Ngày kết thúc")
        {
            jDateChooser1.setVisible(true);
            jRadioButton1.setVisible(true);
            jRadioButton2.setVisible(true);
            jTextField1.setVisible(false);
        }
        else
        {
            jDateChooser1.setVisible(false);
            jRadioButton1.setVisible(false);
            jRadioButton2.setVisible(false);
            jTextField1.setVisible(true);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jSpinner18StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner18StateChanged
        // TODO add your handling code here:
        try {
            jSpinner18.commitEdit();
        } catch ( java.text.ParseException e ) {}
        SpinnerNumberModel model = new SpinnerNumberModel(Integer.parseInt(jSpinner19.getValue().toString()), 0, (int)jSpinner18.getValue(), 1);
        jSpinner19.setModel(model);
    }//GEN-LAST:event_jSpinner18StateChanged

    private void jSpinner11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner11StateChanged
        // TODO add your handling code here:
        try {
            jSpinner11.commitEdit();
        } catch ( java.text.ParseException e ) {}
        if((Float)Float.parseFloat(jSpinner11.getValue().toString())>0)
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 0.0, 10000);
            jSpinner12.setModel(model);
        }
        else
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, Double.MAX_VALUE, 10000);
            jSpinner12.setModel(model);
        }
    }//GEN-LAST:event_jSpinner11StateChanged

    private void jSpinner12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner12StateChanged
        // TODO add your handling code here:
        try {
            jSpinner12.commitEdit();
        } catch ( java.text.ParseException e ) {}
        if((Double)Double.parseDouble(jSpinner12.getValue().toString())>0)
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 0.0, 1);
            jSpinner11.setModel(model);
        }
        else
        {
            SpinnerNumberModel model = new SpinnerNumberModel(0.0, 0.0, 100, 1);
            jSpinner11.setModel(model);
        }
    }//GEN-LAST:event_jSpinner12StateChanged

    private void jComboBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox13ActionPerformed

    private void jComboBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox17ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox17ActionPerformed
    
    public void changeTableModelKmhd(ArrayList<KhuyenMaiHoaDon> arr)
    {
        DefaultTableModel dtm = new DefaultTableModel(){
            public Class getColumnClass(int column) {
                    if(column==4)
                    {
                        return Double.class;
                    }
                    return String.class;
                }
        };
        dtm.addColumn("Mã KMHD");
        dtm.addColumn("Tên KM");
        dtm.addColumn("Ngày bắt đầu");
        dtm.addColumn("Ngày kết thúc");
        dtm.addColumn("Đơn hàng tối thiểu");
        dtm.addColumn("Phần trăm giảm");
        dtm.addColumn("Số tiền giảm");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        jTable1.setModel(dtm);
        for(int i=0;i<arr.size();i++)
        {
            Object[] row = {arr.get(i).getMaKMHD(),arr.get(i).getTenKM(),arr.get(i).getNgayBatDau(),arr.get(i).getNgayKetThuc(),arr.get(i).getDonHangToiThieu(),arr.get(i).getPhanTramGiam(),arr.get(i).getSoTienGiam(),arr.get(i).getTongLuotApDung(),arr.get(i).getTongLuotDaDung()};
            dtm.addRow(row);
        }
    }
    
    public void changeTableModelKmsp(ArrayList<KhuyenMaiSanPham> arr)
    {
        DefaultTableModel dtm = new DefaultTableModel(){
            public Class getColumnClass(int column) {
                    if(column==4)
                    {
                        return Double.class;
                    }
                    return String.class;
                }
        };
        dtm.addColumn("Mã KMSP");
        dtm.addColumn("Ngày bắt đầu");
        dtm.addColumn("Ngày kết thúc");
        dtm.addColumn("Phần trăm giảm");
        dtm.addColumn("Số tiền giảm");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        dtm.addColumn("Mã SP");
        jTable2.setModel(dtm);
        for(int i=0;i<arr.size();i++)
        {
            Object[] row = {arr.get(i).getMaKMSP(),arr.get(i).getNgayBatDau(),arr.get(i).getNgayKetThuc(),arr.get(i).getPhanTramGiam(),arr.get(i).getSoTienGiam(),arr.get(i).getTongLuotApDung(),arr.get(i).getTongLuotDaDung(),arr.get(i).getMaSP()};
            dtm.addRow(row);
        }
    }
    
    public void changeTableModelCp(ArrayList<Coupon> arr)
    {
        DefaultTableModel dtm = new DefaultTableModel(){
            public Class getColumnClass(int column) {
                    return String.class;
                }
        };
        dtm.addColumn("Mã Coupon");
        dtm.addColumn("Code");
        dtm.addColumn("Tổng lượt áp dụng");
        dtm.addColumn("Tổng lượt đã dùng");
        dtm.addColumn("Mã KMHD");
        jTable3.setModel(dtm);
        for(int i=0;i<arr.size();i++)
        {
            Object[] row = {arr.get(i).getMaCP(),arr.get(i).getCode(),arr.get(i).getTongLuotApDung(),arr.get(i).getTongLuotDaDung(),arr.get(i).getMaKMHD()};
            dtm.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brefresh;
    private javax.swing.JButton bsua;
    private javax.swing.JButton bthem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton bxoa;
    private javax.swing.JButton bxoanhap;
    private com.toedter.calendar.JDateChooser dcnbd;
    private com.toedter.calendar.JDateChooser dcnkt;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel1;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel10;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel12;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel13;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel16;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel17;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel19;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel3;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel4;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox13;
    private javax.swing.JComboBox<String> jComboBox17;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser11;
    private com.toedter.calendar.JDateChooser jDateChooser12;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil2;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil3;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner10;
    private javax.swing.JSpinner jSpinner11;
    private javax.swing.JSpinner jSpinner12;
    private javax.swing.JSpinner jSpinner13;
    private javax.swing.JSpinner jSpinner14;
    private javax.swing.JSpinner jSpinner15;
    private javax.swing.JSpinner jSpinner16;
    private javax.swing.JSpinner jSpinner17;
    private javax.swing.JSpinner jSpinner18;
    private javax.swing.JSpinner jSpinner19;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JSpinner jSpinner8;
    private javax.swing.JSpinner jSpinner9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField tfkmhd;
    private javax.swing.JTextField tftkm;
    // End of variables declaration//GEN-END:variables
}
