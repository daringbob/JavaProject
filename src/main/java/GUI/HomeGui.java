package GUI;

import CUSTOM.DraggableRoundPanel;
import DTO.ChucVu;
import DTO.NhanVien;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.awt.event.ActionEvent;
import javax.swing.GroupLayout;
import java.awt.FlowLayout;
import javax.swing.JPanel;
import java.awt.Color;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.Image;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

import javax.swing.LayoutStyle.ComponentPlacement;
import BEAN.DanhMucBean;
import BUS.ChucVuBUS;
import BUS.Controller;
import java.awt.Cursor;
import javax.swing.JPopupMenu;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.lang.reflect.Method;
import java.lang.reflect.Field;

import javax.swing.JMenuItem;
import java.awt.Dimension;
import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.GridLayout;
import javax.swing.BoxLayout;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Admin
 */
public class HomeGui extends javax.swing.JFrame {

    /**
     * Creates new form HomeGui
     */
    public HomeGui() {
        initComponents();
        initAllControllers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	// Set the Windows look and feel
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        draggableRoundPanel4 = new CUSTOM.DraggableRoundPanel();
        draggableRoundPanel5 = new CUSTOM.DraggableRoundPanel();
        draggableRoundPanel6 = new CUSTOM.DraggableRoundPanel();
        draggableRoundPanel6.setOpaque(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1361, 725));
        setSize(new java.awt.Dimension(1361, 725));
        
        pUserInfo = new JPanel();

        javax.swing.GroupLayout draggableRoundPanel4Layout = new javax.swing.GroupLayout(draggableRoundPanel4);
        draggableRoundPanel4Layout.setHorizontalGroup(
        	draggableRoundPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(draggableRoundPanel4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(pUserInfo, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        			.addContainerGap())
        );
        draggableRoundPanel4Layout.setVerticalGroup(
        	draggableRoundPanel4Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(draggableRoundPanel4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(pUserInfo, GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        			.addContainerGap())
        );
        ImageIcon settingIcon = new ImageIcon(HomeGui.class.getResource("/Images/settings.png"));
        Image smallSettingIcon = settingIcon.getImage().getScaledInstance(16, 16, java.awt.Image.SCALE_SMOOTH);
        settingIcon = new ImageIcon(smallSettingIcon);
        GridBagLayout gbl_pUserInfo = new GridBagLayout();
        gbl_pUserInfo.columnWidths = new int[]{168, 0};
        gbl_pUserInfo.rowHeights = new int[]{54, 24, 0};
        gbl_pUserInfo.columnWeights = new double[]{0.0, Double.MIN_VALUE};
        gbl_pUserInfo.rowWeights = new double[]{0.0, 0.0, Double.MIN_VALUE};
        pUserInfo.setLayout(gbl_pUserInfo);
        
        btnSettings = new JButton();
        btnSettings.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		popupSettings.show(btnSettings, 0, btnSettings.getPreferredSize().height);
        	}
        });
        btnSettings.setOpaque(false);
        btnSettings.setPreferredSize(new Dimension(24, 24));
        btnSettings.setMaximumSize(new Dimension(24, 24));
        btnSettings.setMinimumSize(new Dimension(24, 24));
        btnSettings.setIcon(settingIcon);
        
        popupSettings = new JPopupMenu();
        popupSettings.setFont(new Font("Tahoma", Font.PLAIN, 12));
        addPopup(btnSettings, popupSettings);
        popupSettings.setLabel("");
        
        btnLogOut = new JMenuItem("Đăng xuất");
        btnLogOut.setFont(new Font("Arial", Font.PLAIN, 12));
        btnLogOut.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnLogOutActionPerformed(e);
        	}
        });
        btnLogOut.setIcon(new ImageIcon(HomeGui.class.getResource("/Images/logout.png")));
        popupSettings.add(btnLogOut);
        
        btnExit = new JMenuItem("Thoát");
        btnExit.setFont(new Font("Arial", Font.PLAIN, 12));
        btnExit.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		btnExitActionPerformed(e);
        	}
        });

        JPanel panel = new JPanel();
        GridBagConstraints gbc_panel = new GridBagConstraints();
        gbc_panel.fill = GridBagConstraints.BOTH;
        gbc_panel.insets = new Insets(0, 0, 5, 0);
        gbc_panel.gridx = 0;
        gbc_panel.gridy = 0;
        pUserInfo.add(panel, gbc_panel);
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        
        lblStaffName = new JLabel("nhanvien.TenNVVVV");
        panel.add(lblStaffName);
        lblStaffName.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));
        lblStaffName.setFont(new Font("Tahoma", Font.BOLD, 16));
        lblStaffName.setMaximumSize(new Dimension(150, lblStaffName.getPreferredSize().height));
        
        lblRole = new JLabel("chucvu.TenCV");
        panel.add(lblRole);
        lblRole.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));
        lblRole.setFont(new Font("Tahoma", Font.PLAIN, 14));
        lblRole.setMaximumSize(new Dimension(150, lblRole.getPreferredSize().height));
        
        btnExit.setIcon(new ImageIcon(HomeGui.class.getResource("/Images/turn-off.png")));
        popupSettings.add(btnExit);
        GridBagConstraints gbc_btnSettings = new GridBagConstraints();
        gbc_btnSettings.anchor = GridBagConstraints.NORTHEAST;
        gbc_btnSettings.gridx = 0;
        gbc_btnSettings.gridy = 1;
        pUserInfo.add(btnSettings, gbc_btnSettings);
        draggableRoundPanel4.setLayout(draggableRoundPanel4Layout);

        javax.swing.GroupLayout draggableRoundPanel6Layout = new javax.swing.GroupLayout(draggableRoundPanel6);
        draggableRoundPanel6Layout.setHorizontalGroup(
        	draggableRoundPanel6Layout.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 1131, Short.MAX_VALUE)
        );
        draggableRoundPanel6Layout.setVerticalGroup(
        	draggableRoundPanel6Layout.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 664, Short.MAX_VALUE)
        );
        draggableRoundPanel6.setLayout(draggableRoundPanel6Layout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(draggableRoundPanel5, 0, 0, Short.MAX_VALUE)
        				.addComponent(draggableRoundPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(draggableRoundPanel6, GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE)
        			.addContainerGap())
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(draggableRoundPanel6, GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(draggableRoundPanel4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(draggableRoundPanel5, GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        getContentPane().setLayout(layout);
        draggableRoundPanel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        
        pHoaDon = new JPanel();
        draggableRoundPanel5.add(pHoaDon);
        
        lblHoaDon = new JLabel("Hoá đơn");
        lblHoaDon.setForeground(new Color(0, 0, 0));
        lblHoaDon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lblHoaDon.setHorizontalAlignment(SwingConstants.CENTER);
        lblHoaDon.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pHoaDon = new GroupLayout(pHoaDon);
        gl_pHoaDon.setHorizontalGroup(
        	gl_pHoaDon.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblHoaDon, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pHoaDon.setVerticalGroup(
        	gl_pHoaDon.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblHoaDon, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pHoaDon.setLayout(gl_pHoaDon);
        
        pKhachHang = new JPanel();
        pKhachHang.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pKhachHang);
        
        lblKhachHang = new JLabel("Khách hàng");
        lblKhachHang.setForeground(new Color(0, 0, 0));
        lblKhachHang.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lblKhachHang.setHorizontalAlignment(SwingConstants.CENTER);
        lblKhachHang.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pKhachHang = new GroupLayout(pKhachHang);
        gl_pKhachHang.setHorizontalGroup(
        	gl_pKhachHang.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblKhachHang, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pKhachHang.setVerticalGroup(
        	gl_pKhachHang.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblKhachHang, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pKhachHang.setLayout(gl_pKhachHang);
        
        pNhanVien = new JPanel();
        pNhanVien.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pNhanVien);
        
        lblNhanVien = new JLabel("Nhân viên");
        lblNhanVien.setForeground(new Color(0, 0, 0));
        lblNhanVien.setHorizontalAlignment(SwingConstants.CENTER);
        lblNhanVien.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pNhanVien = new GroupLayout(pNhanVien);
        gl_pNhanVien.setHorizontalGroup(
        	gl_pNhanVien.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblNhanVien, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pNhanVien.setVerticalGroup(
        	gl_pNhanVien.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblNhanVien, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pNhanVien.setLayout(gl_pNhanVien);
        
        pKhuyenMai = new JPanel();
        pKhuyenMai.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pKhuyenMai);
        
        lblKhuyenMai = new JLabel("Khuyến mãi");
        lblKhuyenMai.setForeground(new Color(0, 0, 0));
        lblKhuyenMai.setHorizontalAlignment(SwingConstants.CENTER);
        lblKhuyenMai.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pKhuyenMai = new GroupLayout(pKhuyenMai);
        gl_pKhuyenMai.setHorizontalGroup(
        	gl_pKhuyenMai.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblKhuyenMai, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pKhuyenMai.setVerticalGroup(
        	gl_pKhuyenMai.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblKhuyenMai, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pKhuyenMai.setLayout(gl_pKhuyenMai);
        
        pSanPham = new JPanel();
        pSanPham.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pSanPham);
        
        lblSanPham = new JLabel("Sản phẩm");
        lblSanPham.setForeground(new Color(0, 0, 0));
        lblSanPham.setHorizontalAlignment(SwingConstants.CENTER);
        lblSanPham.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pSanPham = new GroupLayout(pSanPham);
        gl_pSanPham.setHorizontalGroup(
        	gl_pSanPham.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblSanPham, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pSanPham.setVerticalGroup(
        	gl_pSanPham.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblSanPham, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pSanPham.setLayout(gl_pSanPham);
        
        pPhanQuyen = new JPanel();
        pPhanQuyen.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pPhanQuyen);
        
        lblPhanQuyen = new JLabel("Phân quyền");
        lblPhanQuyen.setForeground(new Color(0, 0, 0));
        lblPhanQuyen.setHorizontalAlignment(SwingConstants.CENTER);
        lblPhanQuyen.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pPhanQuyen = new GroupLayout(pPhanQuyen);
        gl_pPhanQuyen.setHorizontalGroup(
        	gl_pPhanQuyen.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblPhanQuyen, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pPhanQuyen.setVerticalGroup(
        	gl_pPhanQuyen.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblPhanQuyen, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pPhanQuyen.setLayout(gl_pPhanQuyen);
        
        pThongKe = new JPanel();
        pThongKe.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pThongKe);
        
        lblThongKe = new JLabel("Thống kê");
        lblThongKe.setForeground(new Color(0, 0, 0));
        lblThongKe.setHorizontalAlignment(SwingConstants.CENTER);
        lblThongKe.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pThongKe = new GroupLayout(pThongKe);
        gl_pThongKe.setHorizontalGroup(
        	gl_pThongKe.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblThongKe, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pThongKe.setVerticalGroup(
        	gl_pThongKe.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblThongKe, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pThongKe.setLayout(gl_pThongKe);
        
        pNhapHang = new JPanel();
        pNhapHang.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        draggableRoundPanel5.add(pNhapHang);
        
        lblNhapHang = new JLabel("Nhập hàng");
        lblNhapHang.setForeground(new Color(0, 0, 0));
        lblNhapHang.setHorizontalAlignment(SwingConstants.CENTER);
        lblNhapHang.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pNhapHang = new GroupLayout(pNhapHang);
        gl_pNhapHang.setHorizontalGroup(
        	gl_pNhapHang.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblNhapHang, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pNhapHang.setVerticalGroup(
        	gl_pNhapHang.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblNhapHang, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pNhapHang.setLayout(gl_pNhapHang);
        
        pTaiKhoan = new JPanel();
        draggableRoundPanel5.add(pTaiKhoan);
        
        lblTaiKhoan = new JLabel("Tài khoản");
        lblTaiKhoan.setForeground(new Color(0, 0, 0));
        lblTaiKhoan.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        lblTaiKhoan.setHorizontalAlignment(SwingConstants.CENTER);
        lblTaiKhoan.setFont(new Font("Tahoma", Font.BOLD, 14));
        GroupLayout gl_pTaiKhoan = new GroupLayout(pTaiKhoan);
        gl_pTaiKhoan.setHorizontalGroup(
        	gl_pTaiKhoan.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 168, Short.MAX_VALUE)
        		.addComponent(lblTaiKhoan, GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
        gl_pTaiKhoan.setVerticalGroup(
        	gl_pTaiKhoan.createParallelGroup(Alignment.LEADING)
        		.addGap(0, 38, Short.MAX_VALUE)
        		.addComponent(lblTaiKhoan, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
        pTaiKhoan.setLayout(gl_pTaiKhoan);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initAllControllers() {
    	controller = new Controller(draggableRoundPanel6);
    	List <DanhMucBean> listItem = new ArrayList();
    	
    	// Get all the methods of the class
        Method[] methods = ChucVu.class.getDeclaredMethods();
 
        // Iterate over the methods and check if they are getter methods
        for (Method method : methods) {
          if (method.getName().startsWith("get") && method.getParameterCount() == 0 && method.getReturnType().equals(String.class)) {
        	if (method.getName().equals("getTenCV")) {
        		continue;
        	}
        	
            try {
            	// Get return value of the method
				Object value = method.invoke(new ChucVu());
				
				if (value != null && value.toString().equals("null")) {
					continue;
				}
				String controllerName = method.getName().substring(3);
				String panelVariableName = "p" + controllerName;
				String labelVariableName = "lbl" + controllerName;
				Object panelObj = null;
				Object labelObj = null;
				
				// Get Field object by variable name
				Field field = this.getClass().getDeclaredField(panelVariableName);
				field.setAccessible(true);
				panelObj = field.get(this); // get the value of the object
				
				field = this.getClass().getDeclaredField(labelVariableName);
				field.setAccessible(true);
				labelObj = field.get(this);
				
				// Parse
				JPanel p = (JPanel) panelObj;
				JLabel l = (JLabel) labelObj;
				
				listItem.add(new DanhMucBean(controllerName, p, l));
            } catch (Exception e) {
              e.printStackTrace();
            }
          }
        }
    	
    	listItem.add(new DanhMucBean("TaiKhoan", pTaiKhoan, lblTaiKhoan));
        controller.setEvent(listItem);
    }
    
    private void initController(ChucVu permission) throws NoSuchFieldException, IllegalAccessException {
    	hideAllControllers();
        List <DanhMucBean> listItem = new ArrayList();

        // Get all the methods of the class
        Method[] methods = permission.getClass().getDeclaredMethods();
        
        // Store the first found controller (to setView later)
        // (set default to panel Account)
        String firstString = "TaiKhoan";
        JPanel firstPanel = pTaiKhoan;
        JLabel firstLabel = lblTaiKhoan;
        boolean found = false;
        
        // Iterate over the methods and check if they are getter methods
        for (Method method : methods) {
          if (method.getName().startsWith("get") && method.getParameterCount() == 0 && method.getReturnType().equals(String.class)) {
        	if (method.getName().equals("getTenCV")) {
        		continue;
        	}
        	
            try {
            	// Get return value of the method
				Object value = method.invoke(permission);
				
				if (value.toString().equals("null")) {
					continue;
				}
				String controllerName = method.getName().substring(3);
				String panelVariableName = "p" + controllerName;
				String labelVariableName = "lbl" + controllerName;
				Object panelObj = null;
				Object labelObj = null;
				
				// Get Field object by variable name
				Field field = this.getClass().getDeclaredField(panelVariableName);
				field.setAccessible(true);
				panelObj = field.get(this); // get the value of the object
				
				field = this.getClass().getDeclaredField(labelVariableName);
				field.setAccessible(true);
				labelObj = field.get(this);
				
				// Parse
				JPanel p = (JPanel) panelObj;
				JLabel l = (JLabel) labelObj;
				
				listItem.add(new DanhMucBean(controllerName, p, l));
				p.setVisible(true);
				
				// Update the first found controller (to setView later)
				if (found == false) {
					firstString = controllerName;
					firstPanel = p;
					firstLabel = l;
					found = true;
				}
            } catch (Exception e) {
              e.printStackTrace();
            }
          }
        }
        
        listItem.add(new DanhMucBean("TaiKhoan", pTaiKhoan, lblTaiKhoan));
        controller.setView(firstString, firstPanel, firstLabel);
        controller.initUser(currentUser, permission);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	// set Windows look and feel
        try {
        	javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeGui().setVisible(true);
            }
        });
    }
    
    public boolean isLoggedOut() {
		return loggedOut;
	}

	public void setLoggedOut(boolean loggedOut) {
		this.loggedOut = loggedOut;
	}
    
    private void btnLogOutActionPerformed(ActionEvent e) {
    	setLoggedOut(true);
    	setCurrentUser(null);
    	setPermissionUser(null);
    	dispose();
    }
    
    private void btnExitActionPerformed(ActionEvent e) {
    	dispose();
    }
    
    public void getPermission(NhanVien user) throws NoSuchFieldException, IllegalAccessException {
    	ChucVu cv = new ChucVuBUS().getPermission(user);
    	if (cv == null) {
    		// 
    		return;
    	}
    	
    	setPermissionUser(cv);
    	initController(cv);
    	showInfo(user, cv);
    }
    
    public void hideAllControllers() { 
    	JPanel[] panels = {pHoaDon, pKhachHang, pNhanVien, pKhuyenMai, pSanPham, pPhanQuyen, pThongKe, pNhapHang};
    	for (JPanel p : panels) {
    		p.setVisible(false);
    	}
    }

    public NhanVien getCurrentUser() {
		return currentUser;
	}

	public void setCurrentUser(NhanVien currentUser) {
		this.currentUser = currentUser;
	}

	public ChucVu getPermissionUser() {
		return permissionUser;
	}

	public void setPermissionUser(ChucVu permissionUser) {
		this.permissionUser = permissionUser;
	}

	public Controller getController() {
		return controller;
	}

	public void setController(Controller controller) {
		this.controller = controller;
	}

	public void showInfo(NhanVien nv, ChucVu cv) {
		lblStaffName.setText(nv.getTenNV());
		lblRole.setText(cv.getTenCV());
	}
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
    private CUSTOM.DraggableRoundPanel draggableRoundPanel4;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel5;
    private CUSTOM.DraggableRoundPanel draggableRoundPanel6;
    private JPanel pTaiKhoan;
    private JLabel lblTaiKhoan;
    private JPanel pUserInfo;
    private JLabel lblStaffName;
    private JLabel lblRole;
    private JPanel pHoaDon;
    private JLabel lblHoaDon;
    private JPanel pKhachHang;
    private JLabel lblKhachHang;
    private JPanel pNhanVien;
    private JLabel lblNhanVien;
    private JPanel pKhuyenMai;
    private JLabel lblKhuyenMai;
    private JPanel pSanPham;
    private JLabel lblSanPham;
    private JPanel pPhanQuyen;
    private JLabel lblPhanQuyen;
    private JPanel pThongKe;
    private JLabel lblThongKe;
    private JPanel pNhapHang;
    private JLabel lblNhapHang;
    private JButton btnSettings;
    private JPopupMenu popupSettings;
    private JMenuItem btnLogOut;
    private JMenuItem btnExit;
	private static void addPopup(Component component, final JPopupMenu popup) {
		component.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			public void mouseReleased(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			private void showMenu(MouseEvent e) {
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		});
	}
	private boolean loggedOut = false;
	private NhanVien currentUser = null;
	private ChucVu permissionUser = null;
	private Controller controller = null;
}
